- Terminar implementação de pipeline (branch pipeline)
- Mover "Desenhando Triângulos e X3D" (aula 2) para a primeira aula
- Mover explicação de Renderização (softwares, técnicas, etc) (aula 3) para o começo do curso, possivelmente primeira aula
- Fazer todas as atividades de aula serem em código jupyter notebook para já aproveitar no projeto
- Simplificar a explicação da Matriz de Look-at, só é usada a forma simples de mudança de base
- Fazer os prints do X3D no renderizador só se uma variável de Debug (não sempre como atualmente)
- Ligar o código da impressão do grafo de cena no Renderizador (está comentado)
- Ver pyquaternion (para aula de quatérnios)
- Mostrar o cálculo da Edge Function por produto vetorial como segunda opção (mesmo em coord. baricêntricas)
- Fazer atividade 9.2
- Voltar aula 10(Supersampling) para começo do curso (logo ao final da rasterização 2D, antes de 3D)
- Colocar Aliasing antes da aula de interpolação
- Visibilidade deve ficar após aula de interpolação
- Colocar campo de transparência no print do Renderizador
- Fazer mais Kahoots
- No Renderizador não esta atualizando se ligar grid ou geometria
- Opção no Renderizador para ver canal de profundidade (z-buffer)
- Separar a aula de malhas e de grafo de cena (virar duas aulas)
- Mover TriangleStrip e TriangleFace para projeto de malhas (só trianguloSet com projeções)
- Mover o Cubo para junto da esfera no Renderizador (e colocar cone, etc)
- Remover revisão 2 (malhas em X3D)
- Colocar de fato a explicação de clipping e usar o exemplo de Zoom
- Colocar as Primitivas 3D logo após as malhas
- Alunos estão conectando as chamadas do X3D, o que é ruim, criar uma estrutura que ajuda a criarem chamadas independentes (um pipeline)
- Avisar no curso do cuidado em uam função X3D chamar outra função X3D
- Em vez de chamar de Look-at, chamar só de View, vai evitar confusões
- Falar que depois da Model View Projection o ponto ira para o clip space
- Alinhar na aula antes da entrega como estúdio + aula de revisão (para quem quiser)
- O exemplo de Zoom precisa vir com uma explicação mais completa de clipping
- Separar melhor o arquivo gl.py
- Incluir no projeto clipping! (frustum culling), trazendo axis-aligned bounding box (AABB), no começo.
- Incluir FOG
- Fazer com background color (possivelmente junto com Zbuffer)
- Acertar branch pipelined
- Verificar por que vários alunos tiveram problema de precisão no Z-buffer (algum erro comum)
- Na primeira aula explicar bem X3D (alunos podem não entender bem como funciona, talvez pedir para criarem algo em X3D e visualizar no Browser)
- Deixar claro que indexedFaceSet é um triangle fan
- Puxar a aula de normais do Orfali e puxar para a aula de SDF
- Shaders estão com origem da tela no canto inferior esquerdo, atualizar curso para isso
- Usar ou remover as funções de shader antigas no código do renderizador X3D
- Verificar se o clear do Depth Buffer está bem explicado e documentado (animações no final)
- Ser se os exemplos em X3D não tem inconsistência do color por vertex
- Mais exercícios de shaders antes de entrar em SDF
- Talvez voltar a explicar em detalhes o problema da transformação das normais pela matriz model
- Preciso reforçar a explicações das normais no cálculo de ilunicação (estudantes ficaram muito perdidos)
- Potencialmente levar aula de iluminação para OpenGL (bem como animação) explicar pelo novo pipeline
- Colocar aula de BRDF na sequencia da de iluminação (já em OpenGL)
- Se houver tempo colocar aula se sombras e reflexões na sequencia de BRDF (também em OpenGL)
- Verificar o uso do https://www.desmos.com/ para as aulas
- Verificar se espaço para falar de Space Partitioning, BVH, etc.
- Separar no projeto da textura pontos para a correção do Z (not affine texture mapping)
